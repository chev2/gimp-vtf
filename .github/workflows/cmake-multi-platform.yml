# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build for Windows & Linux (CMake)

on:
  push:
    branches:
    # - master
    - release/*
  pull_request:
    branches:
    - master
    - release/*
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # This step is responsible for downloading & installing GIMP dependencies for ubuntu-latest.
      - name: Install GIMP dependencies
        # GIMP 3.0 isn't available in the standard package repo yet, so we have to do all this
        # Thanks to UbuntuHandbook for providing a prebuilt GIMP 3.0 package repository
        # Source: https://ubuntuhandbook.org/index.php/2024/11/install-gimp-3-ubuntu/
        run: |
          sudo apt install -y pkg-config cmake
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:ubuntuhandbook1/gimp-3
          sudo apt install -y gimp libgimp-3.0-0 libgimp-3.0-dev libgexiv2-dev

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: >
          cmake -B "${{ github.workspace }}/build"
          -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=Release
          -S "${{ github.workspace }}"

      - name: Build
        # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        run: cmake --build "${{ github.workspace }}/build" --config Release
      
      - name: Archive generated plugin
        uses: actions/upload-artifact@v4
        with:
          name: file-vtf
          path: "${{ github.workspace }}/build/file-vtf"
    
  build-windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          # GIMP & build dependencies (namely pkg-config) are installed here
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-crt-git
            mingw-w64-x86_64-headers-git
            mingw-w64-x86_64-winpthreads-git
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-gimp
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: >
          cmake -B "${{ github.workspace }}/build"
          -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=Release
          -S "${{ github.workspace }}"

      - name: Build
        # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        run: cmake --build "${{ github.workspace }}/build" --config Release

      - name: Archive generated plugin
        uses: actions/upload-artifact@v4
        with:
          name: file-vtf
          path: "${{ github.workspace }}/build/file-vtf"
